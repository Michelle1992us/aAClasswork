require 'rack'

# In order to use Rack you have to give it an app that it will call after receiving and processing 
# the request from the web server. All a Rack app needs to do to function properly is respond to the 
# call method when passed one argument consisting of env (the request environment generated by Rack::Server 
# containing the request data) and then return a properly formatted response.

#This is using Rack to start a web server and telling it that the app we are going use is the Proc we are making

# Rack::Server.start(
#   app: Proc.new do |env|
#     ['200', {'Content-Type' => 'text/html'}, ['hello world']]
#   end
# )


# In order to make our code a bit more readable we are going to create the app first and then pass it into Rack::Server#start.
#  Notice here we are creating req and res objects to make our lives easier. Setting the Content-Type header tells the browser
#   what the server has given to it in response. We will only bother with HTML in this project. In order to actually put things 
#   into the response body you use Rack::Response#write. Finally you want to call Rack::Response#finish when the res is done 
#   being built so Rack knows to wrap everything up for you
    # app = Proc.new do |env|
    #     req = Rack::Request.new(env)
    #     res = Rack::Response.new
    #     res['Content-Type'] = 'text/html'
    #     res.write("Hello world!")
    #     res.finish
    # end

  #In order to actually have a functioning web application we need to actually give app to Rack.

#   Rack::Server.start(
#   app: app,
# #  You can specify whatever port you want here, but 3000 is a common choice.
#   Port: 3000
# )

#Now we want to change our application so it doesn't only do one thing. 
# We want to respond to requests with a string of the requested path.Look through the request and response documentation, 
# then change your app code to respond with the path requested instead of Hello world!.

app = Proc.new do |env|
    req = Rack::Request.new(env)
    res = Rack::Response.new
    res['Content-Type'] = "text/text"
    res.write(req.path)
    res.finish
  end
  
  Rack::Server.start(
    app: app,
    Port: 3000
  )
  